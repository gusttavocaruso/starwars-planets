{"version":3,"sources":["context/Context.js","components/SearchBar.jsx","components/Table.jsx","service/planetAPI.js","context/Provider.js","App.js","index.js"],"names":["Context","createContext","SearchBar","contexto","useContext","data","setData","filter","setFilter","setDataNameFilter","filterIN","setFilterIN","opt1","handleAPIRequest","filterByMeasurments","column","comparison","value","objLiterals","a","b","Number","handleMeasChange","target","name","useEffect","filterByName","nameFilter","planet","toLowerCase","includes","filterON","data-testid","className","onClick","type","onChange","map","opt","i","key","dataFilteredBy","Table","dataNameFilter","dataHeaders","item","Object","keys","dataTable","length","index","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","planetAPI","fetch","then","resp","json","results","Provider","children","useState","setOpt1","APIreturn","dataAPI","residents","contextValue","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ced96d21.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import React, { useContext, useEffect } from 'react';\nimport Context from '../context/Context';\n\nconst SearchBar = () => {\n  const contexto = useContext(Context);\n  const {\n    data,\n    setData,\n    filter,\n    setFilter,\n    setDataNameFilter,\n    filterIN,\n    setFilterIN,\n    opt1,\n    handleAPIRequest,\n  } = contexto;\n\n  const { filterByMeasurments: { column, comparison, value } } = filter;\n  const opt2 = ['maior que', 'menor que', 'igual a'];\n  const objLiterals = {\n    'maior que': (a, b) => Number(a) > Number(b),\n    'menor que': (a, b) => Number(a) < Number(b),\n    'igual a': (a, b) => Number(a) === Number(b),\n  };\n\n  const handleMeasChange = ({ target }) => {\n    setFilter({\n      ...filter,\n      filterByMeasurments: {\n        ...filter.filterByMeasurments,\n       [target.name]: target.value },\n    });\n  };\n\n  const handleSubmit = () => {\n    const dataFilteredBy = data\n      .filter((planet) => objLiterals[comparison](planet[column], value));\n    setData(dataFilteredBy);\n    setFilterIN(true);\n  };\n\n  useEffect(() => {\n    const { filterByName: { name } } = filter;\n    const nameFilter = data\n      .filter((planet) => planet.name.toLowerCase()\n      .includes(name.toLowerCase()));\n    setDataNameFilter(nameFilter);\n  }, [data, filter, setDataNameFilter]);\n\n  const handleNameChange = ({ target }) => {\n    setFilter({ ...filter, filterByName: { name: target.value } });\n  };\n\n  const removeFilter = () => {\n    handleAPIRequest();\n    setFilterIN(false);\n  };\n\n  const filterON = (\n    <div data-testid=\"filter\" className=\"filterON\">\n      <span>{column}</span>\n      <span>{comparison}</span>\n      <span>{value}</span>\n      <button onClick={ removeFilter } type=\"button\">X</button>\n    </div>\n  );\n\n  return (\n    <>\n      <span>Filter by name: </span>\n      <input\n        onChange={ handleNameChange }\n        data-testid=\"name-filter\"\n        type=\"text\"\n      />\n      <br />\n\n      <span>Filter by measurements: </span>\n      <select name=\"column\" onChange={ handleMeasChange } data-testid=\"column-filter\">\n        { opt1.map((opt, i) => <option key={ i }>{opt}</option>) }\n      </select>\n\n      <select\n        name=\"comparison\"\n        onChange={ handleMeasChange }\n        data-testid=\"comparison-filter\"\n      >\n        { opt2.map((opt, i) => <option name={ opt } key={ i }>{opt}</option>) }\n      </select>\n\n      <input\n        name=\"value\"\n        type=\"number\"\n        onChange={ handleMeasChange }\n        className=\"value-filter\"\n        data-testid=\"value-filter\"\n        value={ value }\n      />\n\n      <button onClick={ handleSubmit } type=\"button\" data-testid=\"button-filter\"\n      className=\"filter-button\">\n        FILT\n      </button>\n      <br />\n\n      <span>FilterIn: </span>\n      { filterIN ? filterON : '-' }\n    </>\n  );\n};\n\nexport default SearchBar;\n","import React, { useContext } from 'react';\nimport Context from '../context/Context';\n\nconst Table = () => {\n  const contexto = useContext(Context);\n  const { data, dataNameFilter } = contexto;\n  const dataHeaders = data.map((item) => Object.keys(item));\n  const dataTable = dataNameFilter.length === 0 ? data : dataNameFilter;\n\n  const handleTable = () => (\n    <table>\n      <thead>\n        <tr>\n          {dataHeaders[0].map((item, i) => <th key={ i }>{item}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {dataTable.map((planet, index) => (\n          <tr key={ index }>\n            <td>{ planet.name }</td>\n            <td>{ planet.rotation_period }</td>\n            <td>{ planet.orbital_period }</td>\n            <td>{ planet.diameter }</td>\n            <td>{ planet.climate }</td>\n            <td>{ planet.gravity }</td>\n            <td>{ planet.terrain }</td>\n            <td>{ planet.surface_water }</td>\n            <td>{ planet.population }</td>\n            <td>{ planet.films }</td>\n            <td>{ planet.created }</td>\n            <td>{ planet.edited }</td>\n            <td>{ planet.url }</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <div>\n      { (dataTable.length === 0 || dataHeaders.length === 0)\n        ? <h1>llloading...</h1> : handleTable() }\n    </div>\n  );\n};\n\nexport default Table;\n","const planetAPI = async () => {\n  const API = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const { results } = await fetch(API).then((resp) => resp.json());\n  return results;\n};\n\nexport default planetAPI;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './Context';\nimport planetAPI from '../service/planetAPI';\n\nconst Provider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [dataNameFilter, setDataNameFilter] = useState([]);\n  const [filterIN, setFilterIN] = useState(false);\n  const [filter, setFilter] = useState({\n    filterByName: { name: '' },\n    filterByMeasurments: { column: 'population', comparison: 'maior que', value: 0 },\n  });\n  const [opt1, setOpt1] = useState([\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ]);\n  \n  const handleAPIRequest = async () => {\n    const APIreturn = await planetAPI();\n    const dataAPI = APIreturn\n      .filter((item) => delete item.residents);\n    setData(dataAPI);\n  };\n\n  useEffect(() => {\n    handleAPIRequest();\n  }, []);\n\n  const contextValue = {\n    data,\n    setData,\n    filter,\n    setFilter,\n    dataNameFilter,\n    setDataNameFilter,\n    filterIN,\n    setFilterIN,\n    opt1,\n    setOpt1,\n    handleAPIRequest,\n  };\n\n  return (\n    <Context.Provider value={ contextValue }>\n      {children}\n    </Context.Provider>\n  );\n};\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport Table from './components/Table';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n    <Provider>\n      <SearchBar />\n      <Table />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}